//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(GymApplication.Models.ApplicationDbContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsb13769ff6ce0e4d2a7747f23d8b261ff884b99ff02c2260d38e4bb4ce319908b))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySetsb13769ff6ce0e4d2a7747f23d8b261ff884b99ff02c2260d38e4bb4ce319908b : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "b13769ff6ce0e4d2a7747f23d8b261ff884b99ff02c2260d38e4bb4ce319908b"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Class")
            {
                return GetView0();
            }

            if (extentName == "ApplicationDbContext.Classes")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.InvoiceItems")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.Invoice")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.Item")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.ItemInvoice")
            {
                return GetView5();
            }

            if (extentName == "ApplicationDbContext.InvoiceItems")
            {
                return GetView6();
            }

            if (extentName == "ApplicationDbContext.InvoiceItems_Invoice")
            {
                return GetView7();
            }

            if (extentName == "ApplicationDbContext.InvoiceItems_Item")
            {
                return GetView8();
            }

            if (extentName == "ApplicationDbContext.Invoices")
            {
                return GetView9();
            }

            if (extentName == "ApplicationDbContext.Items")
            {
                return GetView10();
            }

            if (extentName == "ApplicationDbContext.Item_Invoices")
            {
                return GetView11();
            }

            if (extentName == "CodeFirstDatabase.MembershipType")
            {
                return GetView12();
            }

            if (extentName == "CodeFirstDatabase.Role")
            {
                return GetView13();
            }

            if (extentName == "CodeFirstDatabase.User")
            {
                return GetView14();
            }

            if (extentName == "ApplicationDbContext.MembershipTypes")
            {
                return GetView15();
            }

            if (extentName == "ApplicationDbContext.Roles")
            {
                return GetView16();
            }

            if (extentName == "ApplicationDbContext.Users")
            {
                return GetView17();
            }

            if (extentName == "CodeFirstDatabase.IdentityRole")
            {
                return GetView18();
            }

            if (extentName == "CodeFirstDatabase.IdentityUserRole")
            {
                return GetView19();
            }

            if (extentName == "CodeFirstDatabase.ApplicationUser")
            {
                return GetView20();
            }

            if (extentName == "CodeFirstDatabase.IdentityUserClaim")
            {
                return GetView21();
            }

            if (extentName == "CodeFirstDatabase.IdentityUserLogin")
            {
                return GetView22();
            }

            if (extentName == "ApplicationDbContext.Roles1")
            {
                return GetView23();
            }

            if (extentName == "ApplicationDbContext.IdentityUserRoles")
            {
                return GetView24();
            }

            if (extentName == "ApplicationDbContext.Users1")
            {
                return GetView25();
            }

            if (extentName == "ApplicationDbContext.IdentityUserClaims")
            {
                return GetView26();
            }

            if (extentName == "ApplicationDbContext.IdentityUserLogins")
            {
                return GetView27();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Class.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Class
        [CodeFirstDatabaseSchema.Class](T1.Class_Id, T1.Class_Name, T1.Class_Day, T1.Class_StartTime, T1.Class_EndTime)
    FROM (
        SELECT 
            T.Id AS Class_Id, 
            T.Name AS Class_Name, 
            T.Day AS Class_Day, 
            T.StartTime AS Class_StartTime, 
            T.EndTime AS Class_EndTime, 
            True AS _from0
        FROM ApplicationDbContext.Classes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Classes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Classes
        [GymApplication.Models.Class](T1.Class_Id, T1.Class_Name, T1.Class_Day, T1.Class_StartTime, T1.Class_EndTime)
    FROM (
        SELECT 
            T.Id AS Class_Id, 
            T.Name AS Class_Name, 
            T.Day AS Class_Day, 
            T.StartTime AS Class_StartTime, 
            T.EndTime AS Class_EndTime, 
            True AS _from0
        FROM CodeFirstDatabase.Class AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.InvoiceItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing InvoiceItems
        [CodeFirstDatabaseSchema.InvoiceItems](T4.InvoiceItems_Id, T4.[InvoiceItems.Invoice_Id], T4.[InvoiceItems.Item_Id])
    FROM (
        SELECT T1.InvoiceItems_Id, T3.[InvoiceItems.Invoice_Id], T2.[InvoiceItems.Item_Id], (T3._from0 AND T3._from0 IS NOT NULL) AS _from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, T1._from2
        FROM  (
            SELECT 
                T.Id AS InvoiceItems_Id, 
                True AS _from2
            FROM ApplicationDbContext.InvoiceItems AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.InvoiceItems_Item_Source).Id AS InvoiceItems_Id, 
                Key(T.InvoiceItems_Item_Target).Id AS [InvoiceItems.Item_Id], 
                True AS _from1
            FROM ApplicationDbContext.InvoiceItems_Item AS T) AS T2
            ON T1.InvoiceItems_Id = T2.InvoiceItems_Id
            LEFT OUTER JOIN (
            SELECT 
                Key(T.InvoiceItems_Invoice_Source).Id AS InvoiceItems_Id, 
                Key(T.InvoiceItems_Invoice_Target).Id AS [InvoiceItems.Invoice_Id], 
                True AS _from0
            FROM ApplicationDbContext.InvoiceItems_Invoice AS T) AS T3
            ON T1.InvoiceItems_Id = T3.InvoiceItems_Id
    ) AS T4");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Invoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Invoice
        [CodeFirstDatabaseSchema.Invoice](T1.Invoice_Id, T1.Invoice_InvoiceDateTime, T1.Invoice_TotalPrice)
    FROM (
        SELECT 
            T.Id AS Invoice_Id, 
            T.InvoiceDateTime AS Invoice_InvoiceDateTime, 
            T.TotalPrice AS Invoice_TotalPrice, 
            True AS _from0
        FROM ApplicationDbContext.Invoices AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Item.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Item
        [CodeFirstDatabaseSchema.Item](T1.Item_Id, T1.Item_Name, T1.Item_Barcode, T1.Item_RetailPrice, T1.Item_ActualPrice, T1.Item_StockNumber)
    FROM (
        SELECT 
            T.Id AS Item_Id, 
            T.Name AS Item_Name, 
            T.Barcode AS Item_Barcode, 
            T.RetailPrice AS Item_RetailPrice, 
            T.ActualPrice AS Item_ActualPrice, 
            T.StockNumber AS Item_StockNumber, 
            True AS _from0
        FROM ApplicationDbContext.Items AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ItemInvoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ItemInvoice
        [CodeFirstDatabaseSchema.ItemInvoice](T1.[ItemInvoice.Item_Id], T1.[ItemInvoice.Invoice_Id])
    FROM (
        SELECT 
            Key(T.Item_Invoices_Source).Id AS [ItemInvoice.Item_Id], 
            Key(T.Item_Invoices_Target).Id AS [ItemInvoice.Invoice_Id], 
            True AS _from0
        FROM ApplicationDbContext.Item_Invoices AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.InvoiceItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing InvoiceItems
        [GymApplication.Models.InvoiceItems](T1.InvoiceItems_Id) WITH 
        RELATIONSHIP(CREATEREF(ApplicationDbContext.Invoices, ROW(T1.[InvoiceItems_Invoice.InvoiceItems_Invoice_Target.Id]),[GymApplication.Models.Invoice]),[GymApplication.Models.InvoiceItems_Invoice],InvoiceItems_Invoice_Source,InvoiceItems_Invoice_Target) 
        RELATIONSHIP(CREATEREF(ApplicationDbContext.Items, ROW(T1.[InvoiceItems_Item.InvoiceItems_Item_Target.Id]),[GymApplication.Models.Item]),[GymApplication.Models.InvoiceItems_Item],InvoiceItems_Item_Source,InvoiceItems_Item_Target) 
    FROM (
        SELECT 
            T.Id AS InvoiceItems_Id, 
            True AS _from0, 
            T.Invoice_Id AS [InvoiceItems_Invoice.InvoiceItems_Invoice_Target.Id], 
            T.Item_Id AS [InvoiceItems_Item.InvoiceItems_Item_Target.Id]
        FROM CodeFirstDatabase.InvoiceItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.InvoiceItems_Invoice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing InvoiceItems_Invoice
        [GymApplication.Models.InvoiceItems_Invoice](T3.[InvoiceItems_Invoice.InvoiceItems_Invoice_Source], T3.[InvoiceItems_Invoice.InvoiceItems_Invoice_Target])
    FROM (
        SELECT -- Constructing InvoiceItems_Invoice_Source
            CreateRef(ApplicationDbContext.InvoiceItems, row(T2.[InvoiceItems_Invoice.InvoiceItems_Invoice_Source.Id]), [GymApplication.Models.InvoiceItems]) AS [InvoiceItems_Invoice.InvoiceItems_Invoice_Source], 
            T2.[InvoiceItems_Invoice.InvoiceItems_Invoice_Target]
        FROM (
            SELECT -- Constructing InvoiceItems_Invoice_Target
                T1.[InvoiceItems_Invoice.InvoiceItems_Invoice_Source.Id], 
                CreateRef(ApplicationDbContext.Invoices, row(T1.[InvoiceItems_Invoice.InvoiceItems_Invoice_Target.Id]), [GymApplication.Models.Invoice]) AS [InvoiceItems_Invoice.InvoiceItems_Invoice_Target]
            FROM (
                SELECT 
                    T.Id AS [InvoiceItems_Invoice.InvoiceItems_Invoice_Source.Id], 
                    T.Invoice_Id AS [InvoiceItems_Invoice.InvoiceItems_Invoice_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.InvoiceItems AS T
                WHERE T.Invoice_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.InvoiceItems_Item.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing InvoiceItems_Item
        [GymApplication.Models.InvoiceItems_Item](T3.[InvoiceItems_Item.InvoiceItems_Item_Source], T3.[InvoiceItems_Item.InvoiceItems_Item_Target])
    FROM (
        SELECT -- Constructing InvoiceItems_Item_Source
            CreateRef(ApplicationDbContext.InvoiceItems, row(T2.[InvoiceItems_Item.InvoiceItems_Item_Source.Id]), [GymApplication.Models.InvoiceItems]) AS [InvoiceItems_Item.InvoiceItems_Item_Source], 
            T2.[InvoiceItems_Item.InvoiceItems_Item_Target]
        FROM (
            SELECT -- Constructing InvoiceItems_Item_Target
                T1.[InvoiceItems_Item.InvoiceItems_Item_Source.Id], 
                CreateRef(ApplicationDbContext.Items, row(T1.[InvoiceItems_Item.InvoiceItems_Item_Target.Id]), [GymApplication.Models.Item]) AS [InvoiceItems_Item.InvoiceItems_Item_Target]
            FROM (
                SELECT 
                    T.Id AS [InvoiceItems_Item.InvoiceItems_Item_Source.Id], 
                    T.Item_Id AS [InvoiceItems_Item.InvoiceItems_Item_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.InvoiceItems AS T
                WHERE T.Item_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Invoices.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Invoices
        [GymApplication.Models.Invoice](T1.Invoice_Id, T1.Invoice_InvoiceDateTime, T1.Invoice_TotalPrice)
    FROM (
        SELECT 
            T.Id AS Invoice_Id, 
            T.InvoiceDateTime AS Invoice_InvoiceDateTime, 
            T.TotalPrice AS Invoice_TotalPrice, 
            True AS _from0
        FROM CodeFirstDatabase.Invoice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Items.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Items
        [GymApplication.Models.Item](T1.Item_Id, T1.Item_Name, T1.Item_Barcode, T1.Item_RetailPrice, T1.Item_ActualPrice, T1.Item_StockNumber)
    FROM (
        SELECT 
            T.Id AS Item_Id, 
            T.Name AS Item_Name, 
            T.Barcode AS Item_Barcode, 
            T.RetailPrice AS Item_RetailPrice, 
            T.ActualPrice AS Item_ActualPrice, 
            T.StockNumber AS Item_StockNumber, 
            True AS _from0
        FROM CodeFirstDatabase.Item AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Item_Invoices.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Item_Invoices
        [GymApplication.Models.Item_Invoices](T3.[Item_Invoices.Item_Invoices_Source], T3.[Item_Invoices.Item_Invoices_Target])
    FROM (
        SELECT -- Constructing Item_Invoices_Source
            CreateRef(ApplicationDbContext.Items, row(T2.[Item_Invoices.Item_Invoices_Source.Id]), [GymApplication.Models.Item]) AS [Item_Invoices.Item_Invoices_Source], 
            T2.[Item_Invoices.Item_Invoices_Target]
        FROM (
            SELECT -- Constructing Item_Invoices_Target
                T1.[Item_Invoices.Item_Invoices_Source.Id], 
                CreateRef(ApplicationDbContext.Invoices, row(T1.[Item_Invoices.Item_Invoices_Target.Id]), [GymApplication.Models.Invoice]) AS [Item_Invoices.Item_Invoices_Target]
            FROM (
                SELECT 
                    T.Item_Id AS [Item_Invoices.Item_Invoices_Source.Id], 
                    T.Invoice_Id AS [Item_Invoices.Item_Invoices_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.ItemInvoice AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.MembershipType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MembershipType
        [CodeFirstDatabaseSchema.MembershipType](T1.MembershipType_Id, T1.MembershipType_MembershipName, T1.MembershipType_MembershipFees)
    FROM (
        SELECT 
            T.Id AS MembershipType_Id, 
            T.MembershipName AS MembershipType_MembershipName, 
            T.MembershipFees AS MembershipType_MembershipFees, 
            True AS _from0
        FROM ApplicationDbContext.MembershipTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Role.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Role
        [CodeFirstDatabaseSchema.Role](T1.Role_Id, T1.Role_RoleName)
    FROM (
        SELECT 
            T.Id AS Role_Id, 
            T.RoleName AS Role_RoleName, 
            True AS _from0
        FROM ApplicationDbContext.Roles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing User
        [CodeFirstDatabaseSchema.User](T1.User_Id, T1.User_ImagePath, T1.User_FirstName, T1.User_LastName, T1.User_EmailAddress, T1.User_Address, T1.User_PhoneNumber, T1.User_EmergencyNumber, T1.User_DateOfBirth, T1.User_RoleId, T1.User_MembershipTypeId, T1.User_RegistrationDate)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.ImagePath AS User_ImagePath, 
            T.FirstName AS User_FirstName, 
            T.LastName AS User_LastName, 
            T.EmailAddress AS User_EmailAddress, 
            T.Address AS User_Address, 
            T.PhoneNumber AS User_PhoneNumber, 
            T.EmergencyNumber AS User_EmergencyNumber, 
            T.DateOfBirth AS User_DateOfBirth, 
            T.RoleId AS User_RoleId, 
            T.MembershipTypeId AS User_MembershipTypeId, 
            T.RegistrationDate AS User_RegistrationDate, 
            True AS _from0
        FROM ApplicationDbContext.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.MembershipTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MembershipTypes
        [GymApplication.Models.MembershipType](T1.MembershipType_Id, T1.MembershipType_MembershipName, T1.MembershipType_MembershipFees)
    FROM (
        SELECT 
            T.Id AS MembershipType_Id, 
            T.MembershipName AS MembershipType_MembershipName, 
            T.MembershipFees AS MembershipType_MembershipFees, 
            True AS _from0
        FROM CodeFirstDatabase.MembershipType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Roles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Roles
        [GymApplication.Models.Role](T1.Role_Id, T1.Role_RoleName)
    FROM (
        SELECT 
            T.Id AS Role_Id, 
            T.RoleName AS Role_RoleName, 
            True AS _from0
        FROM CodeFirstDatabase.Role AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [GymApplication.Models.User](T1.User_Id, T1.User_ImagePath, T1.User_FirstName, T1.User_LastName, T1.User_EmailAddress, T1.User_Address, T1.User_PhoneNumber, T1.User_EmergencyNumber, T1.User_DateOfBirth, T1.User_RoleId, T1.User_MembershipTypeId, T1.User_RegistrationDate)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.ImagePath AS User_ImagePath, 
            T.FirstName AS User_FirstName, 
            T.LastName AS User_LastName, 
            T.EmailAddress AS User_EmailAddress, 
            T.Address AS User_Address, 
            T.PhoneNumber AS User_PhoneNumber, 
            T.EmergencyNumber AS User_EmergencyNumber, 
            T.DateOfBirth AS User_DateOfBirth, 
            T.RoleId AS User_RoleId, 
            T.MembershipTypeId AS User_MembershipTypeId, 
            T.RegistrationDate AS User_RegistrationDate, 
            True AS _from0
        FROM CodeFirstDatabase.User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.IdentityRole.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IdentityRole
        [CodeFirstDatabaseSchema.IdentityRole](T1.IdentityRole_Id, T1.IdentityRole_Name)
    FROM (
        SELECT 
            T.Id AS IdentityRole_Id, 
            T.Name AS IdentityRole_Name, 
            True AS _from0
        FROM ApplicationDbContext.Roles1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.IdentityUserRole.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IdentityUserRole
        [CodeFirstDatabaseSchema.IdentityUserRole](T1.IdentityUserRole_UserId, T1.IdentityUserRole_RoleId)
    FROM (
        SELECT 
            T.UserId AS IdentityUserRole_UserId, 
            T.RoleId AS IdentityUserRole_RoleId, 
            True AS _from0
        FROM ApplicationDbContext.IdentityUserRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ApplicationUser.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ApplicationUser
        [CodeFirstDatabaseSchema.ApplicationUser](T1.ApplicationUser_Id, T1.ApplicationUser_Email, T1.ApplicationUser_EmailConfirmed, T1.ApplicationUser_PasswordHash, T1.ApplicationUser_SecurityStamp, T1.ApplicationUser_PhoneNumber, T1.ApplicationUser_PhoneNumberConfirmed, T1.ApplicationUser_TwoFactorEnabled, T1.ApplicationUser_LockoutEndDateUtc, T1.ApplicationUser_LockoutEnabled, T1.ApplicationUser_AccessFailedCount, T1.ApplicationUser_UserName)
    FROM (
        SELECT 
            T.Id AS ApplicationUser_Id, 
            T.Email AS ApplicationUser_Email, 
            T.EmailConfirmed AS ApplicationUser_EmailConfirmed, 
            T.PasswordHash AS ApplicationUser_PasswordHash, 
            T.SecurityStamp AS ApplicationUser_SecurityStamp, 
            T.PhoneNumber AS ApplicationUser_PhoneNumber, 
            T.PhoneNumberConfirmed AS ApplicationUser_PhoneNumberConfirmed, 
            T.TwoFactorEnabled AS ApplicationUser_TwoFactorEnabled, 
            T.LockoutEndDateUtc AS ApplicationUser_LockoutEndDateUtc, 
            T.LockoutEnabled AS ApplicationUser_LockoutEnabled, 
            T.AccessFailedCount AS ApplicationUser_AccessFailedCount, 
            T.UserName AS ApplicationUser_UserName, 
            True AS _from0
        FROM ApplicationDbContext.Users1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.IdentityUserClaim.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IdentityUserClaim
        [CodeFirstDatabaseSchema.IdentityUserClaim](T1.IdentityUserClaim_Id, T1.IdentityUserClaim_UserId, T1.IdentityUserClaim_ClaimType, T1.IdentityUserClaim_ClaimValue)
    FROM (
        SELECT 
            T.Id AS IdentityUserClaim_Id, 
            T.UserId AS IdentityUserClaim_UserId, 
            T.ClaimType AS IdentityUserClaim_ClaimType, 
            T.ClaimValue AS IdentityUserClaim_ClaimValue, 
            True AS _from0
        FROM ApplicationDbContext.IdentityUserClaims AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.IdentityUserLogin.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IdentityUserLogin
        [CodeFirstDatabaseSchema.IdentityUserLogin](T1.IdentityUserLogin_LoginProvider, T1.IdentityUserLogin_ProviderKey, T1.IdentityUserLogin_UserId)
    FROM (
        SELECT 
            T.LoginProvider AS IdentityUserLogin_LoginProvider, 
            T.ProviderKey AS IdentityUserLogin_ProviderKey, 
            T.UserId AS IdentityUserLogin_UserId, 
            True AS _from0
        FROM ApplicationDbContext.IdentityUserLogins AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Roles1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Roles1
        [GymApplication.Models.IdentityRole](T1.IdentityRole_Id, T1.IdentityRole_Name)
    FROM (
        SELECT 
            T.Id AS IdentityRole_Id, 
            T.Name AS IdentityRole_Name, 
            True AS _from0
        FROM CodeFirstDatabase.IdentityRole AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.IdentityUserRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IdentityUserRoles
        [GymApplication.Models.IdentityUserRole](T1.IdentityUserRole_UserId, T1.IdentityUserRole_RoleId)
    FROM (
        SELECT 
            T.UserId AS IdentityUserRole_UserId, 
            T.RoleId AS IdentityUserRole_RoleId, 
            True AS _from0
        FROM CodeFirstDatabase.IdentityUserRole AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.Users1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users1
        [GymApplication.Models.ApplicationUser](T1.ApplicationUser_Id, T1.ApplicationUser_Email, T1.ApplicationUser_EmailConfirmed, T1.ApplicationUser_PasswordHash, T1.ApplicationUser_SecurityStamp, T1.ApplicationUser_PhoneNumber, T1.ApplicationUser_PhoneNumberConfirmed, T1.ApplicationUser_TwoFactorEnabled, T1.ApplicationUser_LockoutEndDateUtc, T1.ApplicationUser_LockoutEnabled, T1.ApplicationUser_AccessFailedCount, T1.ApplicationUser_UserName)
    FROM (
        SELECT 
            T.Id AS ApplicationUser_Id, 
            T.Email AS ApplicationUser_Email, 
            T.EmailConfirmed AS ApplicationUser_EmailConfirmed, 
            T.PasswordHash AS ApplicationUser_PasswordHash, 
            T.SecurityStamp AS ApplicationUser_SecurityStamp, 
            T.PhoneNumber AS ApplicationUser_PhoneNumber, 
            T.PhoneNumberConfirmed AS ApplicationUser_PhoneNumberConfirmed, 
            T.TwoFactorEnabled AS ApplicationUser_TwoFactorEnabled, 
            T.LockoutEndDateUtc AS ApplicationUser_LockoutEndDateUtc, 
            T.LockoutEnabled AS ApplicationUser_LockoutEnabled, 
            T.AccessFailedCount AS ApplicationUser_AccessFailedCount, 
            T.UserName AS ApplicationUser_UserName, 
            True AS _from0
        FROM CodeFirstDatabase.ApplicationUser AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.IdentityUserClaims.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IdentityUserClaims
        [GymApplication.Models.IdentityUserClaim](T1.IdentityUserClaim_Id, T1.IdentityUserClaim_UserId, T1.IdentityUserClaim_ClaimType, T1.IdentityUserClaim_ClaimValue)
    FROM (
        SELECT 
            T.Id AS IdentityUserClaim_Id, 
            T.UserId AS IdentityUserClaim_UserId, 
            T.ClaimType AS IdentityUserClaim_ClaimType, 
            T.ClaimValue AS IdentityUserClaim_ClaimValue, 
            True AS _from0
        FROM CodeFirstDatabase.IdentityUserClaim AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ApplicationDbContext.IdentityUserLogins.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IdentityUserLogins
        [GymApplication.Models.IdentityUserLogin](T1.IdentityUserLogin_LoginProvider, T1.IdentityUserLogin_ProviderKey, T1.IdentityUserLogin_UserId)
    FROM (
        SELECT 
            T.LoginProvider AS IdentityUserLogin_LoginProvider, 
            T.ProviderKey AS IdentityUserLogin_ProviderKey, 
            T.UserId AS IdentityUserLogin_UserId, 
            True AS _from0
        FROM CodeFirstDatabase.IdentityUserLogin AS T
    ) AS T1");
        }
    }
}
